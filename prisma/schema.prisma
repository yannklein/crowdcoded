
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Impact {
  NO_POVERTY
  ZERO_HUNGER
  GOOD_HEALTH_AND_WELL_BEING
  QUALITY_EDUCATION
  GENDER_EQUALITY
  CLEAN_WATER_AND_SANITATION
  AFFORDABLE_AND_CLEAN_ENERGY
  DECENT_WORK_AND_ECONOMIC_GROWTH
  INDUSTRY_INNOVATION_AND_INFRASTRUCTURE
  REDUCED_INEQUALITIES
  SUSTAINABLE_CITIES_AND_COMMUNITIES
  RESPONSIBLE_CONSUMPTION_AND_PRODUCTION
  CLIMATE_ACTION
  LIFE_BELOW_WATER
  LIFE_ON_LAND
  PEACE_JUSTICE_AND_STRONG_INSTITUTIONS
  PARTNERSHIPS_FOR_THE_GOALS
}

enum Status {
  ON_GOING
  ACHIEVED
  CLOSED
}

model Project {
  id            String      @default(cuid()) @id
  createdAt     DateTime    @default(now()) @map(name: "created_at")
  updatedAt     DateTime    @updatedAt @map(name: "updated_at")
  title         String
  description   String
  status        Status
  goal          Int
  owners        String[]
  impacts       Impact[]
  donations     Donation[]
  @@map(name: "donations")
}

model Donation {
  id            String      @default(cuid()) @id
  createdAt     DateTime    @default(now()) @map(name: "created_at")
  updatedAt     DateTime    @updatedAt @map(name: "updated_at")
  name          String
  email         String      @unique
  amount        Int
  project       Project   @relation(fields: [projectId], references: [id])
  projectId     String
}